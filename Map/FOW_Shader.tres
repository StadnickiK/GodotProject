[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="Shader" id=4]
code = "shader_type spatial;

uniform vec2 uCenter;
uniform float uRadius;
uniform float uOffsetFactor;
uniform float uHeight;

varying float y;

uniform sampler2D textureColor;
uniform sampler2D gameObjects;

void vertex(){
	VERTEX.y += clamp((clamp(distance(VERTEX.xz, uCenter), 0.0, uRadius) / uRadius) * uOffsetFactor, uOffsetFactor * 0.5, uOffsetFactor) - uOffsetFactor;
	y = VERTEX.y;
}

void fragment(){
	ALBEDO = texture(textureColor, UV).xyz;
	if(y<uHeight){
		ALPHA = 0f;
	}else{
		ALPHA = 0.1f;
	}
}
"

[sub_resource type="OpenSimplexNoise" id=2]
octaves = 1
period = 4.0
persistence = 0.6

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[resource]
shader = SubResource( 4 )
shader_param/uCenter = Vector2( 0, 0 )
shader_param/uRadius = 10.0
shader_param/uOffsetFactor = 10.0
shader_param/uHeight = -1.0
shader_param/textureColor = SubResource( 3 )
