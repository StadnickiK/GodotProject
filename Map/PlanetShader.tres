[gd_resource type="ShaderMaterial" load_steps=8 format=2]

[sub_resource type="OpenSimplexNoise" id=1]
period = 65.0
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=2]
seamless = true
noise = SubResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=3]
output_port_for_preview = 0
texture = SubResource( 2 )

[sub_resource type="Gradient" id=4]
offsets = PoolRealArray( 0.481605, 0.561873, 0.622074 )
colors = PoolColorArray( 0.0823529, 0.0588235, 0.839216, 1, 0.660156, 0.651534, 0.108307, 1, 0.022644, 0.414063, 0.102151, 1 )

[sub_resource type="GradientTexture" id=5]
resource_local_to_scene = true
gradient = SubResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=6]
output_port_for_preview = 0
texture = SubResource( 5 )

[sub_resource type="VisualShader" id=7]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_10;
uniform sampler2D tex_frg_9;



void vertex() {
// Output:0

}

void fragment() {
// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, UV.xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// Texture:9
	vec4 tex_frg_9_read = texture(tex_frg_9, n_out10p0.xy);
	vec3 n_out9p0 = tex_frg_9_read.rgb;
	float n_out9p1 = tex_frg_9_read.a;

// Output:0
	ALBEDO = n_out9p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 159, -267 )
nodes/fragment/0/position = Vector2( 840, -120 )
nodes/fragment/9/node = SubResource( 6 )
nodes/fragment/9/position = Vector2( 600, -120 )
nodes/fragment/10/node = SubResource( 3 )
nodes/fragment/10/position = Vector2( 260, -140 )
nodes/fragment/connections = PoolIntArray( 9, 0, 0, 0, 10, 0, 9, 0 )

[resource]
shader = SubResource( 7 )
