[gd_resource type="ShaderMaterial" load_steps=10 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "view"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "normal"

[sub_resource type="VisualShaderNodeFresnel" id=4]

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "view"

[sub_resource type="VisualShaderNodeColorConstant" id=6]
constant = Color( 0.255871, 0.832031, 0.0474731, 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=7]
operator = 1

[sub_resource type="VisualShaderNodeFresnel" id=8]
output_port_for_preview = 0
default_input_values = [ 2, true, 3, 2.0 ]

[sub_resource type="VisualShader" id=9]
code = "shader_type spatial;



void vertex() {
// Output:0

}

void fragment() {
// Color:7
	vec3 n_out7p0 = vec3(0.255871, 0.832031, 0.047473);
	float n_out7p1 = 1.000000;

// Input:2
	vec3 n_out2p0 = NORMAL;

// Input:4
	vec3 n_out4p0 = VIEW;

// Fresnel:3
	bool n_in3p2 = false;
	float n_in3p3 = 1.00000;
	float n_out3p0 = n_in3p2 ? (pow(clamp(dot(n_out2p0, n_out4p0), 0.0, 1.0), n_in3p3)) : (pow(1.0 - clamp(dot(n_out2p0, n_out4p0), 0.0, 1.0), n_in3p3));

// Input:10
	vec3 n_out10p0 = NORMAL;

// Input:11
	vec3 n_out11p0 = VIEW;

// Fresnel:9
	bool n_in9p2 = true;
	float n_in9p3 = 2.00000;
	float n_out9p0 = n_in9p2 ? (pow(clamp(dot(n_out10p0, n_out11p0), 0.0, 1.0), n_in9p3)) : (pow(1.0 - clamp(dot(n_out10p0, n_out11p0), 0.0, 1.0), n_in9p3));

// ScalarOp:8
	float n_out8p0 = n_out3p0 - n_out9p0;

// Output:0
	ALBEDO = n_out7p0;
	ALPHA = n_out8p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -761.607, 75 )
nodes/fragment/0/position = Vector2( 120, 120 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -680, 100 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -460, 140 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( -660, 180 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -460, 40 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( -100, 160 )
nodes/fragment/9/node = SubResource( 8 )
nodes/fragment/9/position = Vector2( -540, 300 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -740, 300 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -740, 380 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 4, 0, 3, 1, 7, 0, 0, 0, 3, 0, 8, 0, 8, 0, 0, 1, 10, 0, 9, 0, 11, 0, 9, 1, 9, 0, 8, 1 )

[resource]
shader = SubResource( 9 )
