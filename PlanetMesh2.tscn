[gd_scene load_steps=39 format=2]

[sub_resource type="SphereMesh" id=1]

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0.00911854, 0.158055 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=4]
output_port_for_preview = 0
texture = SubResource( 3 )

[sub_resource type="Gradient" id=5]
offsets = PoolRealArray( 0.0547112, 1 )

[sub_resource type="GradientTexture" id=6]
gradient = SubResource( 5 )

[sub_resource type="VisualShaderNodeTexture" id=7]
output_port_for_preview = 0
texture = SubResource( 6 )
texture_type = 2

[sub_resource type="OpenSimplexNoise" id=8]
seed = 167
period = 68.5

[sub_resource type="NoiseTexture" id=9]
seamless = true
noise = SubResource( 8 )

[sub_resource type="VisualShaderNodeTexture" id=36]
output_port_for_preview = 0
texture = SubResource( 9 )
texture_type = 2

[sub_resource type="Gradient" id=11]
offsets = PoolRealArray( 0.151976, 0.367781, 0.6231, 0.720365, 0.781155 )
colors = PoolColorArray( 0.089798, 0.106406, 0.214844, 1, 0.233459, 0.280273, 0.585938, 1, 0.292969, 0.22763, 0.00457764, 1, 0.644531, 0.0352478, 0.0352478, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=12]
gradient = SubResource( 11 )

[sub_resource type="VisualShaderNodeTexture" id=37]
output_port_for_preview = 0
texture = SubResource( 12 )
texture_type = 2

[sub_resource type="OpenSimplexNoise" id=14]
seed = 160
period = 51.7
persistence = 0.411
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=15]
seamless = true
noise = SubResource( 14 )

[sub_resource type="VisualShaderNodeTexture" id=38]
output_port_for_preview = 0
texture = SubResource( 15 )
texture_type = 2

[sub_resource type="VisualShaderNodeTexture" id=10]
output_port_for_preview = 0
texture = SubResource( 9 )

[sub_resource type="VisualShaderNodeTexture" id=13]
output_port_for_preview = 0
texture = SubResource( 12 )

[sub_resource type="VisualShaderNodeTexture" id=16]
output_port_for_preview = 0
texture = SubResource( 15 )

[sub_resource type="VisualShader" id=17]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_4;
uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_3;
uniform sampler2D tex_frg_11;
uniform sampler2D tex_frg_12 : hint_normal;



void vertex() {
// Output:0

}

void fragment() {
// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, UV.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out4p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out2p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Texture:11
	vec4 tex_frg_11_read = texture(tex_frg_11, n_out3p0.xy);
	vec3 n_out11p0 = tex_frg_11_read.rgb;
	float n_out11p1 = tex_frg_11_read.a;

// Texture:12
	vec4 tex_frg_12_read = texture(tex_frg_12, UV.xy);
	vec3 n_out12p0 = tex_frg_12_read.rgb;
	float n_out12p1 = tex_frg_12_read.a;

// Output:0
	ALBEDO = n_out3p0;
	EMISSION = n_out11p0;
	NORMALMAP = n_out12p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -628.298, 471.75 )
nodes/fragment/0/position = Vector2( 580, 140 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( -320, 100 )
nodes/fragment/3/node = SubResource( 13 )
nodes/fragment/3/position = Vector2( -60, 120 )
nodes/fragment/4/node = SubResource( 16 )
nodes/fragment/4/position = Vector2( -620, 100 )
nodes/fragment/11/node = SubResource( 4 )
nodes/fragment/11/position = Vector2( 200, 240 )
nodes/fragment/12/node = SubResource( 7 )
nodes/fragment/12/position = Vector2( 200, 540 )
nodes/fragment/13/node = SubResource( 36 )
nodes/fragment/13/position = Vector2( -320, 460 )
nodes/fragment/14/node = SubResource( 37 )
nodes/fragment/14/position = Vector2( -60, 480 )
nodes/fragment/15/node = SubResource( 38 )
nodes/fragment/15/position = Vector2( -620, 460 )
nodes/fragment/connections = PoolIntArray( 4, 0, 2, 0, 3, 0, 0, 0, 3, 0, 11, 0, 12, 0, 0, 8, 2, 0, 3, 0, 11, 0, 0, 5, 15, 0, 13, 0, 13, 0, 14, 0 )

[sub_resource type="ShaderMaterial" id=18]
shader = SubResource( 17 )

[sub_resource type="SphereMesh" id=19]

[sub_resource type="Gradient" id=20]
offsets = PoolRealArray( 0.537994, 0.905775 )

[sub_resource type="GradientTexture" id=21]
gradient = SubResource( 20 )

[sub_resource type="VisualShaderNodeTexture" id=22]
output_port_for_preview = 0
texture = SubResource( 21 )

[sub_resource type="OpenSimplexNoise" id=23]
seed = 160
period = 65.1
lacunarity = 3.0

[sub_resource type="NoiseTexture" id=24]
seamless = true
noise = SubResource( 23 )

[sub_resource type="VisualShaderNodeTexture" id=25]
output_port_for_preview = 0
texture = SubResource( 24 )

[sub_resource type="VisualShader" id=26]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_4;
uniform sampler2D tex_frg_3;



void vertex() {
// Output:0

}

void fragment() {
// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, UV.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out4p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Output:0
	ALPHA = dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -664.564, 0 )
nodes/fragment/0/position = Vector2( 400, 140 )
nodes/fragment/3/node = SubResource( 22 )
nodes/fragment/3/position = Vector2( 120, 160 )
nodes/fragment/4/node = SubResource( 25 )
nodes/fragment/4/position = Vector2( -480, 80 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 1, 4, 0, 3, 0 )

[sub_resource type="ShaderMaterial" id=27]
shader = SubResource( 26 )

[sub_resource type="SphereMesh" id=28]

[sub_resource type="VisualShaderNodeFresnel" id=29]
output_port_for_preview = 0
default_input_values = [ 2, false, 3, 1.1 ]

[sub_resource type="VisualShaderNodeInput" id=30]
input_name = "normal"

[sub_resource type="Gradient" id=31]
offsets = PoolRealArray( 0.592705, 1 )
colors = PoolColorArray( 0, 0, 0, 1, 0.534351, 0.534351, 0.534351, 1 )

[sub_resource type="GradientTexture" id=32]
gradient = SubResource( 31 )

[sub_resource type="VisualShaderNodeTexture" id=33]
output_port_for_preview = 0
texture = SubResource( 32 )

[sub_resource type="VisualShader" id=34]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_4;



void vertex() {
// Output:0

}

void fragment() {
// Fresnel:2
	float n_in2p3 = 1.10000;
	float n_out2p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in2p3);

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, vec3(n_out2p0).xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Output:0
	ALPHA = dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -254.103, 0 )
nodes/fragment/0/position = Vector2( 520, 100 )
nodes/fragment/2/node = SubResource( 29 )
nodes/fragment/2/position = Vector2( -20, 120 )
nodes/fragment/3/node = SubResource( 30 )
nodes/fragment/3/position = Vector2( -240, 140 )
nodes/fragment/4/node = SubResource( 33 )
nodes/fragment/4/position = Vector2( 260, 120 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 4, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=35]
shader = SubResource( 34 )

[node name="PlanetMesh2" type="MeshInstance"]
mesh = SubResource( 1 )
material/0 = SubResource( 18 )

[node name="OmniLight" type="OmniLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.695142, 4.31297, 1.73003 )
light_color = Color( 0.945098, 1, 0, 1 )
light_energy = 10.5

[node name="Clouds" type="MeshInstance" parent="."]
transform = Transform( 1.00436, 0, 0, 0, 1.00436, 0, 0, 0, 1.00436, 0, 0, 0 )
mesh = SubResource( 19 )
material/0 = SubResource( 27 )

[node name="Atmosphere" type="MeshInstance" parent="."]
transform = Transform( 1.00774, 0, 0, 0, 1.00774, 0, 0, 0, 1.00774, 0, 0, 0 )
mesh = SubResource( 28 )
material/0 = SubResource( 35 )
